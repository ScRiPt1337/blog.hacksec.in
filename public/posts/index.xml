<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Hacksec</title>
    <link>https://blog.hacksec.in/posts/</link>
    <description>Recent content in Blog on Hacksec</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 24 Feb 2019 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.hacksec.in/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CSRF Vulnerability</title>
      <link>https://blog.hacksec.in/posts/csrf/</link>
      <pubDate>Fri, 04 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/csrf/</guid>
      <description>CSRF Vulnerability Today in this article, we&amp;rsquo;ll get familiar with the fundamental ideas about CSRF attack or how an attacker powers the client to execute a few undesirable activities that they(user) never planned to.
Before starting the CSRF vulnerability, let&amp;rsquo;s learn some basic work-over flow how it works.
Cookies Cookies are fundamentally some small text documents with a limit of size 4KB that are put away over on the client&amp;rsquo;s browser as name-value pair.</description>
    </item>
    
    <item>
      <title>Cross Site scripting attack (XSS)</title>
      <link>https://blog.hacksec.in/posts/xss/</link>
      <pubDate>Thu, 27 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/xss/</guid>
      <description>Introduction to XSS Vulnerability A cross-Site Scripting attack is a malicious code injection executed in the victim&amp;rsquo;s browser. Likewise, it can be performed with different strategies - with practically no saved script in the webserver.
The fundamental motivation behind this attack is to take the other client&amp;rsquo;s character information - cookies, session tokens and other data. This attack is being utilized to accept the other individual&amp;rsquo;s cookies. As we probably are aware, cookies assist us with signing in naturally.</description>
    </item>
    
    <item>
      <title>Blind sqli | SQL Injection Part 3</title>
      <link>https://blog.hacksec.in/posts/blind_sql/</link>
      <pubDate>Sun, 21 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/blind_sql/</guid>
      <description>SQL Injection Part 3 Blind SQL Injection SQL Injection (Blind), visually impaired SQL injection, the distinction from a general injection is that the overall injection attacker can see the execution aftereffect of the injection articulation on the page. At the same time, as a rule, the assailant can&amp;rsquo;t get it from the showed page during the blind injection. Even if the injection proclamation is executed, the execution result is obscure, so the trouble of visually impaired injection is more serious than a typical injection.</description>
    </item>
    
    <item>
      <title>BACKDOOR writeup</title>
      <link>https://blog.hacksec.in/posts/backdoor/</link>
      <pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/backdoor/</guid>
      <description>Web-Lab information BACKDOOR          Point: 20+   Level: EASY   Target: http://machine10.hacksec.in   First ownby: NONE   Created by: SCRIPT1337X    let&amp;rsquo;s start First of all, let&amp;rsquo;s see what we have to work on by opening the URL. Reconnaissance Ok so now we start our reconnaissance, first, we try to find all the hidden files of the website.</description>
    </item>
    
    <item>
      <title>WAF bypass | SQL injection part 2</title>
      <link>https://blog.hacksec.in/posts/sqli2/</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/sqli2/</guid>
      <description>WAF bypass | SQL Injection Part 2 In the previous article, we discussed simple SQL injection, so in this instructional exercise, I will attempt to speak more about the inward idea than simply bypassing it. When you know the idea, you can undoubtedly control things and foster your own detour strategies in a substantially more sensitive manner than merely being reliant upon that load of crappy stunts. Another thing as am not, even more, a hypothesis fellow so that I will examine the highlight point.</description>
    </item>
    
    <item>
      <title>SQL injection (SQLi) | part 1</title>
      <link>https://blog.hacksec.in/posts/sqli/</link>
      <pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/sqli/</guid>
      <description>What is an SQL injection attack SQL Injection assaults (or SQLi) adjust SQL inquiries, infusing malignant code by utilizing weaknesses.
Effective SQLi assaults permit aggressors to change data set data, access delicate information, execute administrator assignments on the data set, and recuperate documents from the framework. At times aggressors can give orders to the basic information base working framework.
How do SQL injection attacks work? Most applications permit their clients to include information somehow, and web applications are the same.</description>
    </item>
    
    <item>
      <title>Precognition writeup</title>
      <link>https://blog.hacksec.in/posts/precognition/</link>
      <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/precognition/</guid>
      <description>Web-Lab information PRECOGNITION          Point: 20+   Level: EASY   Target: http://machine9.hacksec.in   First ownby: n00bmast3r   Created by: SCRIPT1337X    let&amp;rsquo;s start First of all, let&amp;rsquo;s see what we have to work on by opening the URL. Reading source code Source code is available here : https://machine9.hacksec.in/download/source_code Vulnerable function Send OTP function generates the OTP, and it&amp;rsquo;s vulnerable because it&amp;rsquo;s using the current time as a seed to generate OTP using randint.</description>
    </item>
    
    <item>
      <title>How to use Recon-ng</title>
      <link>https://blog.hacksec.in/posts/recon-ng/</link>
      <pubDate>Mon, 20 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/recon-ng/</guid>
      <description>Recon-ng use in bug bounty In this recon-ng tutorial, discover open source intelligence and how to easily pivot to new results. Find targets and move to discovering vulnerabilities.
What is Recon-ng? Recon-ng is a reconnaissance tool with an interface similar to Metasploit. Running recon-ng from the command line, you enter a shell like environment where you can configure options, perform recon and output results to different report types.
The interactive console provides a number of helpful features, such as command completion and contextual help.</description>
    </item>
    
    <item>
      <title>AWS Bucket Dump</title>
      <link>https://blog.hacksec.in/posts/awsbucketdump/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/awsbucketdump/</guid>
      <description>AWS Bucket Dump Why this tool? AWSBucketDump is a security tool to find interesting files in AWS S3 buckets that are part of Amazon cloud services. These storage containers may have interesting files, which a tool like AWSBucketDump can discover.
How it works AWSBucketDump is using a Python script to parse a list of names. Using that list it tries to guess valid bucket names. Using a keywords list the most interesting items can be filtered from the results.</description>
    </item>
    
    <item>
      <title>Subdomain Takeover on AWS S3</title>
      <link>https://blog.hacksec.in/posts/s3_subdomain_takeover/</link>
      <pubDate>Thu, 16 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/s3_subdomain_takeover/</guid>
      <description>Subdomain Takeover on AWS S3 What Is Sub domain Takeover: When an attacker is able to gain control of a company’s subdomain hosted on a cloud service such as AWS, github etc. because of the DNS entries pointing to that service is not being removed. This allows attacker to set up a phishing page on that sub-domain or serve malicious content. Disadvantage: · Attacker can misuse company’s reputation by send phishing emails from the legitimate domain, perform XSS, phishing, stealing cookies and more.</description>
    </item>
    
    <item>
      <title>how to use Shodan</title>
      <link>https://blog.hacksec.in/posts/shodan/</link>
      <pubDate>Mon, 13 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/shodan/</guid>
      <description>Shodan Use In Bug Bounty What is shodan Shodan is a search engine that lets users search for various types of servers (webcams, routers, servers, etc.) connected to the internet using a variety of filters. Some have also described it as a search engine of service banners, which are metadata that the server sends back to the client. This can be information about the server software, what options the service supports, a welcome message or anything else that the client can find out before interacting with the server.</description>
    </item>
    
    <item>
      <title>how to use nmap</title>
      <link>https://blog.hacksec.in/posts/nmap/</link>
      <pubDate>Sun, 12 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/nmap/</guid>
      <description>What is NMAP Nmap is a free and open-source network scanner created by Gordon Lyon. Nmap is used to discover hosts and services on a computer network by sending packets and analyzing the responses. Nmap provides a number of features for probing computer networks, including host discovery and service and operating system detection.
What Does Nmap Do? Nmap (Network Mapper) is an open source and free security scanner used for network discovery and security auditing.</description>
    </item>
    
    <item>
      <title>How to Recon</title>
      <link>https://blog.hacksec.in/posts/getting_started_with_recon/</link>
      <pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/getting_started_with_recon/</guid>
      <description>Reconnaissance So here is our another article regarding recon&amp;hellip;
Reconnaissance attacks are general knowledge gathering attacks
Google dork A Google query, sometimes just referred to as a dork, is a search string that uses advanced search operators to find information that is not readily available on a website
Some google dork example   site:&amp;quot;.uk&amp;quot; intitle:&amp;ldquo;admin login&amp;rdquo; [Pages Containing Login Portals]
  &amp;ldquo;Not for Public Release&amp;rdquo; + &amp;ldquo;Confidential&amp;rdquo; ext:pdf | ext:doc | ext:xlsx [Files Containing Juicy Info]</description>
    </item>
    
    <item>
      <title>how to use hacksec-cli</title>
      <link>https://blog.hacksec.in/posts/hacksec_cli/</link>
      <pubDate>Tue, 07 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/hacksec_cli/</guid>
      <description>What is hacksec-cli hacksec-CLI is a command-line tool written in python3 which allow you to access all hacksec services directly from your command-line.
Requirement  python3 git  How to install in linux command : curl -s -L https://raw.githubusercontent.com/hacksec-in/hacksec-cli/main/install.sh | bash How to install in windows  git clone https://github.com/hacksec-in/hacksec-cli cd hacksec-cli python3 install.py  Why hacksec-cli This is the beta version of hacksec-cli. Soon we will add more features like one-click lab deployment in your local machines and we will add our tools.</description>
    </item>
    
    <item>
      <title>Find me writeup</title>
      <link>https://blog.hacksec.in/posts/_findme/</link>
      <pubDate>Mon, 06 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.hacksec.in/posts/_findme/</guid>
      <description>Web-Lab information Find ME          Point: 30+   Level: MEDIUM   Target: http://machine4.hacksec.in   First ownby: H3X1337   Created by: SCRIPT1337X    let&amp;rsquo;s start First of all, let&amp;rsquo;s see what we have to work on by opening the URL. Reconnaissance Ok so now we start our reconnaissance, first we try to find all the hidden folders of the website using Dirb with default wordlist common.</description>
    </item>
    
  </channel>
</rss>
